import {
  STAGE_HEIGHT,
  STAGE_WIDTH,
  checkCollision,
  createStage,
} from "./gameHelpers";

describe("gameHelpers", () => {
  it("should return valid stage width and heigth", () => {
    const width = STAGE_WIDTH;
    const heigth = STAGE_HEIGHT;

    expect(width).toBe(10);
    expect(heigth).toBe(20);
  });

  it("should create valid stage", () => {
    const stage = createStage();
    const stageToBe = Array.from(Array(STAGE_HEIGHT), () =>
      Array(STAGE_WIDTH).fill([0, "clear"])
    );
    expect(stage).toStrictEqual(stageToBe);
  });

  it("should return false while check collision", () => {
    const player = {
      pos: {
        x: 3,
        y: 0,
      },
      tetromino: [
        [0, "L", 0],
        [0, "L", 0],
        [0, "L", "L"],
      ],
      collided: false,
      ind: 0,
    };
    const stage = [
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        ["L", "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        ["L", "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        ["L", "clear"],
        ["L", "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
    ];
    const coord = { x: 0, y: 1 };

    const valid = checkCollision(player, stage, coord);
    expect(valid).toBe(false);
  });

  it("should return true while check collision", () => {
    const player = {
      pos: {
        x: 3,
        y: 18,
      },
      tetromino: [
        ["O", "O"],
        ["O", "O"],
      ],
      collided: false,
      ind: 0,
    };
    const stage = [
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        ["O", "clear"],
        ["O", "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
      [
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        ["O", "clear"],
        ["O", "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
        [0, "clear"],
      ],
    ];

    const coord = {x: 0, y: 1};

    const valid = checkCollision(player, stage, coord);
    expect(valid).toBe(true);
  });
});
